//*==============================================================================
//** Colour, font stacks, media queries, that kind of thing  **
//*==============================================================================

//*=========================================
//** Layout **
//*=========================================

//* Main Grid Mixin
@mixin main-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-areas:
    'h h h h'
    'm m m m'
    'f f f f';
  grid-gap: $grid-gap;
}

//* Flex Mixin
@mixin flex($direction) {
  display: flex;
  flex-direction: $direction;
}

//* Layout Variables
$grid-gap: 0 1rem;

//*=========================================
//** Typography **
//*=========================================

//* Font Stacks
@mixin main-font-stack {
  font-family: 'futura-pt-bold', sans-serif;
  font-weight: 700;
  font-style: normal;
}

//********** Sizing & spacing **********

//* Font sizing

$font-size-extra-large: 10rem;
$font-size-large: 5rem;
$font-size-medium: 2.5rem;
$font-size-small: 1rem;

//* Headings

//Sizing
$heading-size-large: $font-size-extra-large;

//Spacing
$heading-spacing-large: 20rem;

//* Sections

// Spacing
$section-spacing-super-large: 40rem;
$section-spacing-extra-large: 35rem;
$section-spacing-large: 20rem;
$section-spacing-medium: 15rem;
$section-spacing-small: 10rem;

//Spacing
$paragraph-spacing-large: 5rem;
$paragraph-spacing-medium: 2.5rem;
$paragraph-spacing-small: 1rem;

//* Forms

//Sizing
$input-font-size: $font-size-small;

//Spacing
$input-spacing: 1rem;

//********** Links **********

//* Fancy Link Underline
@mixin link-underline($colour) {
  transition: all $transition-one;
  border-bottom: 3px solid transparent;
  padding-bottom: 5px;

  &:hover,
  &focus {
    border-bottom: 3px solid $colour;
    padding-bottom: 0;
    margin-bottom: 5px;
    outline: 0;

    @include breakpoint(800) {
      border-bottom: 3px solid transparent;
    }
  }
}

//* Fancy Link Underline With Visited styles
@mixin link-underline-visited($colour) {
  transition: all $transition-one;
  border-bottom: 3px solid transparent;
  padding-bottom: 5px;

  @include breakpoint(800) {
    border-bottom: 3px solid transparent;
    text-decoration: underline;
  }

  &:hover,
  &focus {
    border-bottom: 3px solid $colour;
    padding-bottom: 0;
    margin-bottom: 5px;
    outline: 0;

    @include breakpoint(800) {
      border-bottom: 3px solid transparent;
    }
  }

  &:visited {
    border-bottom: 3px solid $link-visited;

    @include breakpoint(800) {
      border-bottom: 3px solid transparent;
    }
  }
}

//*=========================================
//** Colours  **
//*=========================================

//Main brand Colours
$green: #5bb072;
$blue: #535cb0;
$light: #fdfcfa;

//Color Variables
$background-colour-blue: $blue;
$background-colour-light: $light;

//Main Font Colours
$font-colour-light: $light;
$font-colour-green: $green;
$font-colour-blue: $blue;

//*=========================================
//** Effects and Animation  **
//*=========================================

//********** Animation Stagger **********

@mixin stagger-anim-delay($elem, $initial-delay, $stagger-delay) {
  @for $i from 1 through $elem {
    &:nth-of-type(#{$i}) {
      animation-delay: $initial-delay + $stagger-delay * $i;
    }
    $i: $i - 1;
  }
}

//********** Transition Timings**********

$transition-one: 0.3s ease-in-out 0s;

//*=========================================
//** Media Queries   **
//*=========================================

//*=========================================
//** Media Queries   **
//*=========================================

//TODO: Delete unused media query's

//********** Max Width **********

@mixin breakpoint($point) {
  @if unitless($point) {
    $point: 1px * $point;
  }
  @media (max-width: $point) {
    @content;
  }
}

//********** Min Width **********

@mixin breakpoint-min($point) {
  @if unitless($point) {
    $point: 1px * $point;
  }
  @media (min-width: $point) {
    @content;
  }
}

//********** Height **********

@mixin height-breakpoint($point) {
  @if unitless($point) {
    $point: 1px * $point;
  }
  @media (max-height: $point) {
    @content;
  }
}

//********** Width and Orientation **********

@mixin width-orientation-breakpoint($point, $orientation: portrait) {
  @if unitless($point) {
    $point: 1px * $point;
  }
  @media (max-height: $point) and (orientation: $orientation) {
    @content;
  }
}
